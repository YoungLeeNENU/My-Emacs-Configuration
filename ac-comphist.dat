((("column_name" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("ignore" .
   [0 0 0 1 0 0])
  ("terminated" .
   [0 0 0 0 1 0 0 0 0 0])
  ("'character'" .
   [0 0 0 1 2 1 0 0 0 0 0])
  ("options" .
   [0 0 1 0 0 0 0])
  ("by" .
   [4 0])
  ("character" .
   [0 0 0 0 0 0 0 0 1])
  ("table_name" .
   [1 0 0 0 0 0 0 0 0 0])
  ("it" .
   [1 0])
  ("load" .
   [1 0 0 0])
  ("语法" .
   [1 0])
  ("mysqlimport" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("infile" .
   [2 0 0 0 0 0])
  ("data" .
   [2 0 0 0])
  ("OPTIONS" .
   [0 0 1 0 1 0 0])
  ("select" .
   [1 0 0 0 0 0])
  ("from" .
   [1 0 0 0])
  ("outfile" .
   [1 0 0 0 0 0 0])
  ("into" .
   [2 0 0 0])
  ("SELECT" .
   [0 0 0 0 0 2])
  ("+end_example" .
   [0 0 0 1 2 0 0 0 0 0 0 0])
  ("+begin_example" .
   [0 0 0 0 3 0 0 0 0 0 0 0 0 0])
  ("rstrip" .
   [0 0 0 0 1 0])
  ("string" .
   [3 0 0 0 0 0])
  ("union" .
   [0 0 0 1 0])
  ("unix" .
   [0 0 0 1])
  ("dir" .
   [2 0 0])
  ("set" .
   [6 0 0])
  ("sample" .
   [0 0 0 1 0 0])
  ("define" .
   [0 0 0 0 0 1])
  ("do" .
   [1 0])
  ("php" .
   [1 0 0])
  ("atoi" .
   [1 0 0 0])
  ("inc" .
   [1 0 0])
  ("time_d" .
   [1 0 0 0 0 0])
  ("time_m" .
   [1 0 0 0 0 0])
  ("time_y" .
   [1 0 0 0 0 0])
  ("_pick_server_load" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("inport" .
   [0 0 0 1 0 0])
  ("key" .
   [1 0 0])
  ("_pick_server" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("registerNew" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("core" .
   [1 0 0 0])
  ("with" .
   [1 0 0 0])
  ("_mydecorator" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("res" .
   [1 0 0])
  ("return" .
   [0 0 0 2 0 0])
  ("args" .
   [0 0 0 1])
  ("kw" .
   [2 0])
  ("mydecorator" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("function" .
   [0 0 0 0 2 0 0 0])
  ("openflow" .
   [1 0 0 0 0 0 0 0])
  ("第三章" .
   [1 0 0])
  ("secure" .
   [0 0 0 2 0 0])
  ("HiraginoSansGB" .
   [0 0 2 0 0 0 0 0 0 0 0 0 0 0])
  ("Section" .
   [0 0 0 0 0 0 2])
  ("chapter" .
   [0 0 0 2 0 0 0])
  ("Load" .
   [1 0 0 0])
  ("Figure" .
   [0 0 1 0 1 0])
  ("负载均衡" .
   [0 0 0 1])
  ("property" .
   [0 0 1 0 0 0 0 0])
  ("Var" .
   [1 0 1])
  ("Array" .
   [0 0 1 0 0])
  ("lambda" .
   [0 0 0 2 0 0])
  ("while" .
   [2 0 0 2 1])
  ("case" .
   [1 0 0 0])
  ("ruby" .
   [0 0 1 0])
  ("usr" .
   [0 0 1])
  ("PRIVATEOPT_EMERG_FLOW_RESTORATION" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("state" .
   [0 0 0 0 1])
  ("context" .
   [0 0 0 0 0 0 1])
  ("close" .
   [0 0 0 1 0])
  ("result" .
   [0 0 0 0 1 0])
  ("self" .
   [0 0 0 8])
  ("open" .
   [1 0 1 0])
  ("file" .
   [1 0 1 0])
  ("input" .
   [2 0 0 3 1])
  ("import" .
   [0 0 0 8 1 2])
  ("else" .
   [0 0 0 4])
  ("if" .
   [11 0])
  ("len" .
   [2 0 0])
  ("argv" .
   [2 0 0 1])
  ("sys" .
   [7 0 0])
  ("Write" .
   [0 0 0 1 1])
  ("Calc" .
   [0 0 0 1])
  ("Read" .
   [0 0 0 2])
  ("problem" .
   [0 0 0 0 0 0 3])
  ("Algorithm" .
   [0 0 0 0 1 0 0 0 0])
  ("int" .
   [4 0 0])
  ("sscanf" .
   [0 0 0 0 0 1])
  ("printf" .
   [1 0 1 4 0 0])
  ("sprintf" .
   [0 0 0 1 1 0 0])
  ("100" .
   [1 0 0])
  ("char" .
   [1 0 0 1])
  ("memcpy" .
   [2 0 0 1 2 0])
  ("memmove" .
   [0 0 0 0 0 1 0])
  ("malloc" .
   [0 0 0 1 0 0])
  ("range" .
   [1 0 0 1 1])
  ("print" .
   [1 0 1 5 23])
  ("for" .
   [11 0 0])
  ("in" .
   [2 0])
  ("pass" .
   [0 0 4 5])
  ("def" .
   [7 0 0])
  ("class" .
   [0 0 2 1 0])
  ("time" .
   [3 0 0 1])
  ("cmd" .
   [2 0 0])
  ("os" .
   [6 0])
  ("system" .
   [2 0 1 0 0 0])
  ("python" .
   [1 0 0 0 0 0])
  ("_handle_PacketIn" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("about" .
   [0 0 1 0 0])
  ("Absence" .
   [0 0 1 0 0 0 0])
  ("ABSOLUTELY" .
   [0 0 1 0 0 0 0 0 0 0])
  ("as" .
   [0 1])
  ("are" .
   [1 0 1])
  ("they" .
   [0 0 0 1])
  ("the" .
   [2 0 0])
  ("most" .
   [1 0 0 1])
  ("Imports" .
   [0 0 0 0 1 0 0])
  ("to" .
   [2 0])
  ("be" .
   [2 0])
  ("or" .
   [1 0])
  ("not" .
   [1 0 0])
  ("this" .
   [1 0 0 0])
  ("quit" .
   [0 0 1 0])
  ("major" .
   [0 0 0 2 0])
  ("year" .
   [0 0 0 2])
  ("id" .
   [1 0])
  ("stuid" .
   [1 0 0 0 0])
  ("filename" .
   [1 0 0 0 0 0 0 0])
  ("stuname" .
   [0 0 0 0 0 1 0])
  ("isinstance" .
   [0 0 1 0 2 1 1 0 0 0])
  ("str" .
   [5 0 0])
  ("elif" .
   [0 0 1 0])
  ("try" .
   [1 0 0])))
