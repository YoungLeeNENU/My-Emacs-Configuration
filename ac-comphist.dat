((("f-iter" .
   [0 0 0 1 1 0])
  ("product" .
   [0 0 0 0 3 0 1])
  ("protect" .
   [0 0 3 1 0 0 0])
  ("set!" .
   [0 0 1 0])
  ("step" .
   [0 0 3 1])
  ("check" .
   [1 0 2 0 0])
  ("for" .
   [2 0 0])
  ("pascal" .
   [0 0 0 0 0 1])
  ("pass" .
   [0 0 0 1])
  ("matrix" .
   [0 0 0 0 2 0])
  ("print" .
   [0 0 0 2 0])
  ("def" .
   [1 0 0])
  ("color-theme-monokai" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0])
  ("your-config-name-here" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("color-theme-" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("monokai-theme" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("require" .
   [0 0 0 4 0 0 0])
  ("color-theme-emacs-nw" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("two" .
   [0 0 1])
  ("one" .
   [0 0 1])
  ("eqv?" .
   [1 0 0 0])
  ("newline" .
   [0 0 0 1 7 1 0])
  ("begin" .
   [1 0 0 6 1])
  ("display" .
   [0 0 0 9 0 0 0])
  ("else-clause" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("else" .
   [0 0 1 1])
  ("then-clause" .
   [0 0 1 0 0 0 0 0 0 0 0])
  ("predicate" .
   [0 0 0 1 0 0 0 0 0])
  ("cond" .
   [0 0 0 4])
  ("new-if" .
   [0 0 0 7 0 6])
  ("average" .
   [0 0 0 0 1 0 0])
  ("sqrt" .
   [0 0 0 1])
  ("define" .
   [0 0 0 0 0 14])
  ("test" .
   [0 0 0 2])
  ("if" .
   [10 0])
  ("__name__" .
   [1 0 1 0 0 0 0 0])
  ("color-theme" .
   [0 0 0 0 0 0 0 0 0 0 3])
  ("color-gray-p" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("color-theme-mode" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("cubic-iter" .
   [0 0 0 0 0 0 0 0 0 2])
  ("guess" .
   [0 0 6 2 0])
  ("good-enough?" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("abs" .
   [2 0 0])
  ("import" .
   [0 0 0 1 0 0])
  ("improve" .
   [0 0 0 0 1 0 0])
  ("amount" .
   [0 0 1 5 0 0])
  ("or" .
   [5 0])
  ("kinds-of-coins" .
   [0 0 1 5 1 0 0 0 0 0 0 0 0 0])
  ("field" .
   [0 0 1 0 0])
  ("first-denomination" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("count-change" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("read" .
   [0 0 0 1])
  ("utf" .
   [1 0 0])
  ("168" .
   [1 0 0])
  ("11" .
   [1 0])
  ("int" .
   [2 0 0])
  ("sample" .
   [0 0 0 2 0 0])
  ("size" .
   [1 0 1 0])
  ("struct" .
   [0 0 0 0 0 2])
  ("static" .
   [0 0 0 0 0 1])
  ("Array" .
   [0 0 0 3 0])))
