;; Object polls/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "polls/"
  :tables (list 
   (semanticdb-table "admin.py"
    :major-mode 'python-mode
    :tags 
        '( ("polls.models" include nil nil [24 53])
            ("polls.models" include nil nil [54 85])
            ("django.contrib" include nil nil [86 118])
            ("ChoiceInline" type
               (:superclasses ("admin.TabularInline")
                :members 
                  ( ("model" variable nil (reparse-symbol indented_block_body) [162 176])
                    ("extra" variable nil (reparse-symbol indented_block_body) [178 187]))                  
                :type "class")
                nil [120 188])
            ("PollAdmin" type
               (:superclasses ("admin.ModelAdmin")
                :members 
                  ( ("list_display" variable nil (reparse-symbol indented_block_body) [225 266])
                    ("list_filter" variable nil (reparse-symbol indented_block_body) [268 294])
                    ("search_fields" variable nil (reparse-symbol indented_block_body) [296 325])
                    ("date_hierarchy" variable nil (reparse-symbol indented_block_body) [327 354])
                    ("fieldsets" variable nil (reparse-symbol indented_block_body) [356 485])
                    ("inlines" variable nil (reparse-symbol indented_block_body) [487 511]))                  
                :type "class")
                nil [189 512])
            ("admin" code nil nil [513 549]))          
    :file "admin.py"
    :pointmax 581
    :fsize 580
    :lastmodtime '(20845 27004 444829 419000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "models.py"
    :major-mode 'python-mode
    :tags 
        '( ("django.db" include nil nil [24 52])
            ("Poll" type
               (:superclasses ("models.Model")
                :members 
                  ( ("questions" variable nil (reparse-symbol indented_block_body) [132 178])
                    ("pub_date" variable nil (reparse-symbol indented_block_body) [180 229])
                    ("__unicode__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [248 252]))                          )
                        (reparse-symbol indented_block_body) [232 279]))                  
                :type "class")
                nil [98 279])
            ("Choice" type
               (:superclasses ("models.Model")
                :members 
                  ( ("poll" variable nil (reparse-symbol indented_block_body) [309 339])
                    ("choice" variable nil (reparse-symbol indented_block_body) [341 384])
                    ("votes" variable nil (reparse-symbol indented_block_body) [386 415])
                    ("__unicode__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [434 438]))                          )
                        (reparse-symbol indented_block_body) [418 462]))                  
                :type "class")
                nil [280 462]))          
    :file "models.py"
    :pointmax 462
    :fsize 485
    :lastmodtime '(20849 20726 484201 144000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "__init__.py"
    :major-mode 'python-mode
    :tags nil
    :file "__init__.py"
    :pointmax 1
    :fsize 0
    :lastmodtime '(20843 60806 451526 767000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "views.py"
    :major-mode 'python-mode
    :tags 
        '( ("polls.models" include nil nil [50 87])
            ("django.http" include nil nil [88 155])
            ("django.template" include nil nil [156 215])
            ("django.shortcuts" include nil nil [216 282])
            ("django.core.urlresolvers" include nil nil [283 327])
            ("'''
def index(request):
    latest_poll_list = Poll.objects.all().order_by('-pub_date')[:5]
    return render_to_response('polls/index.html',
                              {'latest_poll_list': latest_poll_list})

def detail(request, poll_id):
    p = get_object_or_404(Poll, pk = poll_id)
    # try:
    #     p = Poll.objects.get(pk = poll_id)
    # except Poll.DoesNotExist:
    #     raise Http404
    return render_to_response('polls/detail.html',
                              {'poll': p},
                              context_instance = RequestContext(request))
    
def results(request, poll_id):
    p = get_object_or_404(Poll, pk = poll_id)
    return render_to_response('polls/results.html', {'poll': p})
    # return HttpResponse(\"You are looking at the result of poll %s\" % poll_id)
'''" code nil nil [329 1128])
            ("vote" function (:arguments 
              ( ("request" variable nil (reparse-symbol function_parameters) [1139 1146])
                ("poll_id" variable nil (reparse-symbol function_parameters) [1148 1155]))              ) nil [1130 1749]))          
    :file "views.py"
    :pointmax 1814
    :fsize 1813
    :lastmodtime '(20850 14267 172522 618000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "urls.py"
    :major-mode 'python-mode
    :tags 
        '( ("django.conf.urls" include nil nil [59 110])
            ("django.views.generic" include nil nil [111 164])
            ("django.contrib" include nil nil [165 197])
            ("polls.models" include nil nil [198 227])
            ("admin" code nil nil [233 253])
            ("'''
# 投票视图
urlpatterns = patterns('polls.views',
                       url(r'^$',                          'index'),
                       url(r'^(?P<poll_id>\\d+)/$',         'detail'),
                       url(r'^(?P<poll_id>\\d+)/results/$', 'results'),
                       url(r'^(?P<poll_id>\\d+)/vote/$',    'vote'),
)
'''" code nil nil [255 587])
            ("urlpatterns" variable nil nil [596 1479])
            ("urlpatterns" variable nil nil [1491 1587]))          
    :file "urls.py"
    :pointmax 1588
    :fsize 1635
    :lastmodtime '(20850 13930 68531 237000)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!neo!document!python!code!Django!oracle!mysite!polls!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.1beta"
  )
