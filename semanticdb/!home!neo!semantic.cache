;; Object neo/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "neo/"
  :tables (list 
   (semanticdb-table ".emacs"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("setq" code nil nil [53 85])
            ("setq" code nil nil [86 135])
            ("add-to-list" code nil nil [144 200])
            ("load" code nil nil [201 218])
            ("load" code nil nil [219 236])
            ("load" code nil nil [237 254])
            ("load" code nil nil [255 271])
            ("load" code nil nil [272 295])
            ("load" code nil nil [296 311])
            ("load" code nil nil [312 329])
            ("load" code nil nil [330 348])
            ("load" code nil nil [349 368])
            ("load" code nil nil [369 387])
            ("load" code nil nil [388 404])
            ("load" code nil nil [405 421])
            ("load" code nil nil [422 440])
            ("custom-set-variables" code nil nil [460 2426])
            ("custom-set-faces" code nil nil [2427 2920]))          
    :file ".emacs"
    :pointmax 2921
    :fsize 2928
    :lastmodtime '(20850 36471 583954 887000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "test.c"
    :major-mode 'c-mode
    :tags 
        '( ("stdio.h" include (:system-flag t) nil [1 19])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [30 39])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [40 53]))                  
                :type "int")
                nil [21 148]))          
    :file "test.c"
    :pointmax 149
    :unmatched-syntax 'nil
    )
   )
  :file "!home!neo!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.1beta"
  )
